apiVersion: v1
kind: Namespace
metadata:
  name: nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: nginx
  labels:
    app: nginx
data:
  nginx.conf: |
      #user  nobody;
      worker_processes  1;
      error_log  /var/log/nginx/error.log;
      error_log  /var/log/nginx/error.log  notice;
      error_log  /var/log/nginx/error.log  info;

      events {
        worker_connections  1024;
      }
      
      http {
        default_type  text/plain;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        keepalive_timeout  65;

        server {
          listen       8080;
          server_name  localhost;
          access_log  /var/log/nginx/host.access.log  main;

          location / {
            root   html;
            index  index.html index.htm;
          }

          location /nginx_status {
            stub_status on;
          }

          error_page  404              /404.html;
          error_page   500 502 503 504  /50x.html;
          location = /50x.html {
            root   html;
          }
        }
      }
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
    <title>Nginx</title>
    </head>
    <body>

    <h1>Hello world Tanzu!</h1>
    </body>
    </html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: nginx
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.25
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /etc/nginx
          readOnly: true
          name: nginx-config
      - name: nginx-prometheus-exporter
        image: nginx/nginx-prometheus-exporter:1.1
        args:
          - '-nginx.scrape-uri=http://localhost:8080/nginx_status'
        resources:
          limits:
            memory: 128Mi
        ports:
          - containerPort: 9113
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
          items:
            - key: nginx.conf
              path: nginx.conf
            - key: index.html
              path: html/index.html
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: nginx
  labels:
    app: nginx
spec:
  ports:
    - port: 80
      name: http
      targetPort: 8080
    - port: 9113
      name: metrics
      targetPort: 9113
  selector:
    app: nginx
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: nginx
  namespace: nginx
  labels:
    app: nginx
spec:
  virtualhost:
    fqdn: # The FQDN of your application
    tls:
      secretName: # Name of the secret containing the wildcard TLS certificate
  routes:
    - conditions:
        - prefix: /
      services:
        - name: nginx
          port: 80